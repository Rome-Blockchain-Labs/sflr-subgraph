services:
  ipfs:
    image: ipfs/kubo:latest
    ports:
      - '15001:5001'
    volumes:
      - ipfs_staging:/export
      - ipfs_data:/data/ipfs
    environment:
      IPFS_PROFILE: "server"

  postgres:
    image: postgres:latest
    ports:
      - '15432:5432'
    environment:
      POSTGRES_PASSWORD: letmein
      POSTGRES_USER: postgres
      POSTGRES_DB: graph-node
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    command: ["postgres", "-c", "shared_preload_libraries=pg_stat_statements"]
    volumes:
      - pgdata:/var/lib/postgresql/data

  graph-node:
    image: graphprotocol/graph-node:latest
    ports:
      - '18000:8000'
      - '18001:8001'
      - '18020:8020'
      - '18030:8030'
      - '18040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: postgres
      postgres_pass: letmein
      postgres_db: graph-node
      ipfs: 'http://ipfs:5001'
      xethereum: 'flare:https://flare-api.flare.network/ext/C/rpc'
      ethereum: 'flare:https://flare.solidifi.app/ext/C/rpc'
      sethereum: 'flare:wss://flare-api.flare.network/ext/bc/C/ws'
      zethereum: 'flare:ws://192.168.72.221:19650/ext/bc/C/ws'
      GRAPH_LOG: info
      ETHEREUM_REORG_THRESHOLD: 0
      ETHEREUM_ANCESTOR_COUNT: 0
      GRAPH_ETH_CALL_BY_NUMBER: true

  deploy-subgraph:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SUBGRAPH_NAME=sflr-subgraph
      - NODE_URL=http://127.0.0.1:18000/
      - IPFS_URL=http://127.0.0.1:15001
      - VERSION=v0.0.4
    depends_on:
      - graph-node

volumes:
  ipfs_staging:
  ipfs_data:
  pgdata:

name: sflr-subgraph
